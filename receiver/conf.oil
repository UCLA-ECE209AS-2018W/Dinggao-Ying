/* ###*B*###
 * Erika Enterprise, version 3
 * 
 * Copyright (C) 2017 Evidence s.r.l.
 * 
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or (at
 * your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * General Public License, version 2, for more details.
 * 
 * You should have received a copy of the GNU General Public License,
 * version 2, along with this program; if not, see
 * <https://www.gnu.org/licenses/old-licenses/gpl-2.0.html >.
 * 
 * This program is distributed to you subject to the following
 * clarifications and special exceptions to the GNU General Public
 * License, version 2.
 * 
 * THIRD PARTIES' MATERIALS
 * 
 * Certain materials included in this library are provided by third
 * parties under licenses other than the GNU General Public License. You
 * may only use, copy, link to, modify and redistribute this library
 * following the terms of license indicated below for third parties'
 * materials.
 * 
 * In case you make modified versions of this library which still include
 * said third parties' materials, you are obligated to grant this special
 * exception.
 * 
 * The complete list of Third party materials allowed with ERIKA
 * Enterprise version 3, together with the terms and conditions of each
 * license, is present in the file THIRDPARTY.TXT in the root of the
 * project.
 * ###*E*### */

/** \file	conf.oil
 *  \brief	System Configuration.
 *
 *  This file contains the System Configuration for Erika Enterprise.
 *
 *  \author	Giuseppe Serano
 *  \date	2017
 */

CPU mySystem {

	OS myOs {

		EE_OPT = "OS_EE_APPL_BUILD_DEBUG";
		EE_OPT = "OS_EE_BUILD_DEBUG";

		USERESSCHEDULER = FALSE;

		CPU_DATA = AVR8 {
			MULTI_STACK = FALSE;
			IDLEHOOK = TRUE {
				HOOKNAME = "idle_hook";
			};
		};

		MCU_DATA = MEGA {
			MODEL = MEGA_328p;
		};

/*
		USEDYNAMICAPI = TRUE {
			TASK_ARRAY_SIZE		= 6;
			SN_ARRAY_SIZE		= 6;
			STACK_ARRAY_SIZE	= 3;
			STACKS_MEMORY_SIZE	= 128;
		};
*/

		LIB = ARDUINO {
			/* Used to select Board: UNO or NANO */
			SDK_BOARD = UNO;
			/* Used to select vendor: CC or ORG */
			VARIANT = CC {
				VERSION = "1.8.5";
			};
			/* Create libarduino.a */
			STAND_ALONE = TRUE;
			};

		KERNEL_TYPE = OSEK {
			CLASS = BCC1;
		};

	};

	TASK TaskL1 {
		PRIORITY = 1;
		STACK = SHARED;
		SCHEDULE = FULL;
		APP_SRC = "code.cpp";
		APP_SRC = "tasks.cpp";
		APP_SRC = "mcp_can.cpp";
		APP_SRC = "SPI.cpp";
	};

};
